{"version":3,"file":"static/chunks/1.js","sources":["webpack:///./components/Slider.js"],"sourcesContent":["import React from 'react'\n\n\nclass Slider extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n\n        this.scrollings = [];\n\n        var prevTime = new Date().getTime();\n\n        this.addMouseWheelHandler();\n    }\n\n    addMouseWheelHandler() {\n        var prefix = '';\n        var _addEventListener;\n\n        if (window.addEventListener) {\n            _addEventListener = \"addEventListener\";\n        } else {\n            _addEventListener = \"attachEvent\";\n            prefix = 'on';\n        }\n\n        // detect available wheel event\n        var support = 'onwheel' in document.createElement('div') ? 'wheel' : // Modern browsers support \"wheel\"\n            document.onmousewheel !== undefined ? 'mousewheel' : // Webkit and IE support at least \"mousewheel\"\n                'DOMMouseScroll'; // let's assume that remaining browsers are older Firefox\n\n\n        if (support == 'DOMMouseScroll') {\n            document[_addEventListener](prefix + 'MozMousePixelScroll', this.mouseWheelHandler.bind(this), false);\n        }\n\n        //handle MozMousePixelScroll in older Firefox\n        else {\n            document[_addEventListener](prefix + support, this.mouseWheelHandler.bind(this), false);\n        }\n    }\n\n\n    mouseWheelHandler(e) {\n        let self = this;\n\n        var curTime = new Date().getTime();\n\n\n        // cross-browser wheel delta\n        e = e || window.event;\n        var value = e.wheelDelta || -e.deltaY || -e.detail;\n        var delta = Math.max(-1, Math.min(1, value));\n\n        var horizontalDetection = typeof e.wheelDeltaX !== 'undefined' || typeof e.deltaX !== 'undefined';\n        var isScrollingVertically = (Math.abs(e.wheelDeltaX) < Math.abs(e.wheelDelta)) || (Math.abs(e.deltaX) < Math.abs(e.deltaY) || !horizontalDetection);\n\n        //Limiting the array to 150 (lets not waste memory!)\n        if (this.scrollings.length > 149) {\n            this.scrollings.shift();\n        }\n\n        //keeping record of the previous scrollings\n        this.scrollings.push(Math.abs(value));\n        \n\n        //time difference between the last scroll and the current one\n        var timeDiff = curTime - prevTime;\n        prevTime = curTime;\n\n        //haven't they scrolled in a while?\n        //(enough to be consider a different scrolling action to scroll another section)\n        if (timeDiff > 200) {\n            //emptying the array, we dont care about old scrollings for our averages\n            this.scrollings = [];\n        }\n\n        if (canScroll) {\n            var averageEnd = getAverage(scrollings, 10);\n            var averageMiddle = getAverage(scrollings, 70);\n            var isAccelerating = averageEnd >= averageMiddle;\n\n            //to avoid double swipes...\n            if (isAccelerating && isScrollingVertically) {\n                //scrolling down?\n                if (delta < 0) {\n                    console.log('down');\n\n                    //scrolling up?\n                } else {\n                    console.log('up');\n                }\n            }\n        }\n\n        return false;\n    }\n\n    render() {\n        return (\n            <div className=\"slider\">\n                <div className=\"slide\">1</div>\n                <div className=\"slide\">2</div>\n                <div className=\"slide\">3</div>\n            </div>\n        )\n    }\n}\nexport default Slider"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AATA;AASA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAMA;AACA;AACA;;;AAGA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAxGA;AACA;AAyGA;;;;A","sourceRoot":""}